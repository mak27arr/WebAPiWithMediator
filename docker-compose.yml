services:
  webapi:
    image: webapi_product
    container_name: webapi_product
    build:
        context: .
        dockerfile: ./Product/docker/Dockerfile
    networks:
      - webapp-network
    env_file:
      - .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres_db;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - AUTHENTICATION_AUTHORITY=${AUTHENTICATION_AUTHORITY}
      - AUTHENTICATION_ISSUERSIGNINGKEY=${AUTHENTICATION_ISSUERSIGNINGKEY}
      - AUTHENTICATION_AUDIENCE=${AUTHENTICATION_AUDIENCE}
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
  inventoryService:
    image: inventory_service
    container_name: inventory_service
    build:
        context: .
        dockerfile: ./InventoryService/docker/Dockerfile
    networks:
      - webapp-network
    env_file:
      - .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres_db;Port=5432;Database=${POSTGRES_InventoryService_DB};Username=${POSTGRES_InventoryService_USER};Password=${POSTGRES_InventoryService_PASSWORD}
      - AUTHENTICATION_AUTHORITY=${AUTHENTICATION_AUTHORITY}
      - AUTHENTICATION_ISSUERSIGNINGKEY=${AUTHENTICATION_ISSUERSIGNINGKEY}
      - AUTHENTICATION_AUDIENCE=${AUTHENTICATION_AUDIENCE}
    ports:
      - "5020:5020"
    depends_on:
      postgres:
        condition: service_healthy
  gateway:
    image: ${DOCKER_REGISTRY-}gateway
    container_name: gateway
    build:
      context: .
      dockerfile: ./Gateway/docker/Dockerfile
    env_file:
      - .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - AUTHENTICATION_AUTHORITY=${AUTHENTICATION_AUTHORITY}
      - AUTHENTICATION_ISSUERSIGNINGKEY=${AUTHENTICATION_ISSUERSIGNINGKEY}
      - AUTHENTICATION_AUDIENCE=${AUTHENTICATION_AUDIENCE}
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      - webapi
    networks:
      - webapp-network
  postgres:
    image: postgres:15
    container_name: postgres_db
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - webapp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "--quiet"]
      interval: 1s
      timeout: 5s
      retries: 10
  auth:
    image: webapi_auth
    container_name: webapi_auth
    build:
        context: .
        dockerfile: ./Auth/docker/Dockerfile
    networks:
      - webapp-network
    env_file:
      - .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres_db;Port=5432;Database=${POSTGRES_Auth_DB};Username=${POSTGRES_Auth_USER};Password=${POSTGRES_Auth_PASSWORD}
      - AUTHENTICATION_AUTHORITY=${AUTHENTICATION_AUTHORITY}
      - AUTHENTICATION_ISSUERSIGNINGKEY=${AUTHENTICATION_ISSUERSIGNINGKEY}
      - AUTHENTICATION_AUDIENCE=${AUTHENTICATION_AUDIENCE}
    ports:
      - "5010:5010"
    depends_on:
      postgres:
        condition: service_healthy
networks:
  webapp-network:
    driver: bridge
